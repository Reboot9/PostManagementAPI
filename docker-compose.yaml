version: '3.8'

services:
  db:
    image: postgres:14.1-alpine
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - post_management_network

  web:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    command: ["./docker-entrypoint.sh"]
    env_file:
      - ./.env
    volumes:
      - .:/PostManagementAPI
      - static_volume:/PostManagementAPI/static
      - media_volume:/PostManagementAPI/media
    expose:
      - 8000
    networks:
      - post_management_network
    depends_on:
      - db

  nginx:
    restart: unless-stopped
    build:
      context: .
      dockerfile: config/nginx/Dockerfile
    volumes:
      - static_volume:/PostManagementAPI/static
      - media_volume:/PostManagementAPI/media
    ports:
      - "80:80"
    networks:
      - post_management_network
    depends_on:
      - web

  redis:
    image: redis:7.0-alpine
    networks:
      - post_management_network

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - .:/PostManagementAPI
    command: ["celery", "-A", "PostManagementAPI", "worker", "--loglevel=info"]
    networks:
      - post_management_network
    depends_on:
#      - db
#      - web
      - redis

volumes:
  static_volume:
  media_volume:
  postgres_data:

networks:
  post_management_network:
    driver: bridge